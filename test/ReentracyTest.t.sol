// SPDX-License-Identifier: MIT
pragma solidity ^0.8.26;

import {Test} from "forge-std/Test.sol";
import {EtherStore, Attack} from "../src/Reentracy.sol";

contract ReentracyTest is Test {
    EtherStore etherStore;
    Attack attack;

    address user1 = makeAddr("user1");
    address user2 = makeAddr("user2");
    address attacker = makeAddr("attacker");
    uint256 constant AMOUNT = 1 ether;

    function setUp() public {
        etherStore = new EtherStore();
        attack = new Attack(address(etherStore));
        vm.deal(user1, 1 ether);
        vm.deal(user2, 1 ether);
        vm.deal(attacker, 1 ether);
    }

    function testReentracyExploit() public {
        vm.prank(user1);
        etherStore.deposit{value: AMOUNT}();

        vm.prank(user2);
        etherStore.deposit{value: AMOUNT}();

        vm.prank(attacker);
        attack.attack{value: AMOUNT}();

        uint finalBalance = attack.getBalance();

        assertEq(finalBalance, AMOUNT * 3);
    }
}
